{"version":3,"sources":["ColorBox.js","BoxForm.js","ColorBoard.js","App.js","index.js"],"names":["ColorBox","props","handleRemove","bind","evt","this","removeBox","id","styles","backgroundColor","height","width","className","style","onClick","Component","uuid","require","BoxForm","handleChange","handleSubmit","handleFocus","handleBlur","state","color","setState","target","name","value","previousSibling","classList","add","remove","preventDefault","boxState","addNewBox","labels","document","getElementsByTagName","i","length","onSubmit","htmlFor","type","onChange","onFocus","onBlur","required","ColorBoard","boxes","box","prevState","getElementById","map","key","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.d640d660.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ColorBox.css';\n\nclass ColorBox extends Component {\n  constructor(props){\n    super(props);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  handleRemove(evt){\n    this.props.removeBox(this.props.id)\n  }\n\n  render(){\n    let styles = {'backgroundColor': this.props.backgroundColor, 'height': this.props.height + 'px', 'width': this.props.width + 'px'};\n    return(\n      <div id={this.props.id}>\n        <div className='ColorBox' style={styles}>\n\n        </div>\n        <i className=\"material-icons\" onClick={this.handleRemove}>close</i>\n      </div>\n    )\n  }\n}\n\nexport default ColorBox;\n","import React, { Component } from 'react';\nimport './BoxForm.css';\nconst uuid = require('uuid/v4');\n\nclass BoxForm extends Component {\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.state = {\n      width: '',\n      height: '',\n      color: ''\n    }\n  }\n\n  handleChange(evt){\n    this.setState({\n      [evt.target.name]: evt.target.value\n    })\n  }\n\n  handleFocus(evt){\n    evt.target.previousSibling.classList.add('active')\n  }\n\n  handleBlur(evt){\n    if(evt.target.value === \"\") {\n      evt.target.previousSibling.classList.remove('active')\n    }\n  }\n\n  handleSubmit(evt){\n    evt.preventDefault();\n    const boxState = {...this.state, id: uuid()}\n    this.props.addNewBox(boxState)\n    this.setState({\n      width: '',\n      height: '',\n      color: ''\n    })\n    let labels = document.getElementsByTagName('label');\n    for(let i = 0; i < labels.length; i++){\n      labels[i].classList.remove('active')\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"BoxForm\">\n      <h1 className=\"BoxForm--heading_one\"> Create a new box! </h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"BoxForm--input_group\">\n            <label htmlFor=\"width-input\">Width</label>\n            <input\n              type=\"text\"\n              name=\"width\"\n              id=\"width-input\"\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n              value={this.state.width}\n              required\n            />\n          </div>\n          <div className=\"BoxForm--input_group\">\n            <label htmlFor=\"height-input\">Height</label>\n            <input\n              type=\"text\"\n              name=\"height\"\n              id=\"height-input\"\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n              value={this.state.height}\n              required\n              />\n          </div>\n          <div className=\"BoxForm--input_group\">\n            <label htmlFor=\"color-input\">Color</label>\n            <input\n              type=\"text\"\n              name=\"color\"\n              id=\"color-input\"\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n              value={this.state.color}\n              required\n            />\n            <span className=\"BoxForm--input_helper_text\">This field supports color hex, rgb/rgba, hsl, and named colors</span>\n          </div>\n          <button className=\"BoxForm--submit_btn\">Add box</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default BoxForm;\n","import React, { Component } from 'react';\nimport './ColorBoard.css';\nimport ColorBox from './ColorBox.js';\nimport BoxForm from './BoxForm.js';\n\n\nclass ColorBoard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      boxes: []\n    }\n    this.addNewBox = this.addNewBox.bind(this)\n  }\n\n  addNewBox(box) {\n    this.setState(prevState => {\n      return { boxes: [...prevState.boxes, box] }\n    })\n  }\n\n  removeBox(box){\n    let thisBox = document.getElementById(box);\n    thisBox.remove();\n\n  }\n\n  render(){\n    return(\n      <div className=\"ColorBoard\">\n        <BoxForm addNewBox={this.addNewBox}/>\n        <div className=\"ColorBoard--container\">\n          {this.state.boxes.map(box =>{\n            return <ColorBox\n                    backgroundColor={box.color}\n                    height={box.height}\n                    width={box.width}\n                    key={box.id}\n                    id={box.id}\n                    removeBox={this.removeBox}\n                  />\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ColorBoard;\n","import React from 'react';\nimport './App.css';\nimport ColorBoard from './ColorBoard.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ColorBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}